load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//:mappings.bzl", "pkg_attributes", "pkg_filegroup", "pkg_files", "strip_prefix")
load("@rules_pkg//:pkg.bzl", "pkg_deb", "pkg_tar")
load("//:bazel/rules/patch_rpath.bzl", "patch_rpath")

go_library(
    name = "agent_lib",
    srcs = [
        "doc.go",
        "klog.go",
        "main.go",
        "main_common.go",
        "main_linux_cgo.go",
        "main_linux_no_cgo.go",
        "main_windows.go",
    ],
    cgo = True,
    importpath = "github.com/DataDog/datadog-agent/cmd/agent",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/util/log",
        "@io_k8s_klog//:klog",
        "@io_k8s_klog_v2//:klog",
    ] + select({
        "@rules_go//go/platform:aix": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:android": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:darwin": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:dragonfly": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:freebsd": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:illumos": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:ios": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:js": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:linux": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
            "@org_golang_x_sys//unix",
        ],
        "@rules_go//go/platform:netbsd": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:openbsd": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:plan9": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:solaris": [
            "//cmd/agent/command",
            "//cmd/agent/subcommands",
            "//cmd/internal/runcmd",
            "@com_github_spf13_cobra//:cobra",
        ],
        "@rules_go//go/platform:windows": [
            "//cmd/agent/command",
            "//cmd/agent/common",
            "//cmd/agent/subcommands",
            "//cmd/agent/windows/service",
            "//cmd/internal/runcmd",
            "//pkg/util/winutil/servicemain",
        ],
        "//conditions:default": [],
    }),
)

go_binary(
    name = "agent",
    embed = [":agent_lib"],
    gc_linkopts = [
        "-r=/opt/datadog-agent/embedded/lib",  # keep
    ],
    visibility = ["//visibility:public"],
    x_defs = {
        # keep: Hard-code these things to avoid touching rtloader initialization logic for now
        "github.com/DataDog/datadog-agent/pkg/collector/python.pythonHome3": "/opt/datadog-agent/embedded",  # keep
        "github.com/DataDog/datadog-agent/pkg/config/setup.DefaultPython": "3",  # keep
    },
)

patch_rpath(
    name = "patched_agent",
    rpaths = ["/opt/datadog-agent/embedded/lib"],
    deps = [":agent"],
)

patch_rpath(
    name = "patched_rtloader",
    rpaths = ["/opt/datadog-agent/embedded/lib"],
    deps = ["//rtloader"],
)

patch_rpath(
    name = "patched_python3",
    rpaths = ["/opt/datadog-agent/embedded/lib"],
    deps = ["@python3"],
)
